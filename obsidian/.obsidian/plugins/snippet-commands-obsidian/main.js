/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

class SnippetCommandsPlugin extends obsidian.Plugin {
    onload() {
        this.enableCommands();
    }
    onunload() {
    }
    reloadCommands() {
        this.unload();
        this.load();
    }
    enableCommands() {
        const customCss = this.app.customCss;
        const knownSnippets = customCss.snippets;
        console.log(`[Snippet Commands]: Loading commands for ${knownSnippets.length} snippets`, knownSnippets);
        knownSnippets.forEach((snippet) => {
            this.addCommand({
                id: `snippet-command-${snippet}`,
                name: `Toggle ${snippet}`,
                callback: () => {
                    customCss.setCssEnabledStatus(snippet, !customCss.enabledSnippets.has(snippet));
                }
            });
        });
        this.addCommand({
            id: `snippet-command-reload-all-snippets`,
            name: `Reload snippet commands`,
            callback: () => {
                this.reloadCommands();
            }
        });
    }
}

module.exports = SnippetCommandsPlugin;


/* nosourcemap */